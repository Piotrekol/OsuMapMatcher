@page "/"
@namespace OMM.Desktop.Content
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OMM.Desktop</title>
    <base href="~/" />
    <link href="css/app.min.css" rel="stylesheet" />
    <link href="css/fontawesome.min.css" rel="stylesheet" />
    <link href="css/solid.min.css" rel="stylesheet" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">ðŸ—™</a>
    </div>
    <script src="_framework/blazor.server.js"></script>
    <script type="text/javascript">
        function downloadFromUrl(options) {
            var _a;
            const anchorElement = document.createElement('a');
            anchorElement.href = options.url;
            anchorElement.download = (_a = options.fileName) !== null && _a !== void 0 ? _a : '';
            anchorElement.click();
            anchorElement.remove();
        }
        function downloadFromByteArray(options) {
            const numArray = atob(options.byteArray).split('').map(c => c.charCodeAt(0));
            const uint8Array = new Uint8Array(numArray);
            const blob = new Blob([uint8Array], { type: options.contentType });
            const url = URL.createObjectURL(blob);
            downloadFromUrl({ url: url, fileName: options.fileName });
            URL.revokeObjectURL(url);
        }
    </script>
</body>
</html>
