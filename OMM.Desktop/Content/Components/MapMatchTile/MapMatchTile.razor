@using OMM.Desktop.Data.OmmApi
@using OMM.Desktop.Content.Components.Expander

<div class="@Bem.Base()">
    <Expander OnExpand="HandleExpandChange">
        <Header>
            <img class="@Bem.Element("preview-image", expandedFlag)"
                 src="@imageSource" />
            <div class="@Bem.Element("map-metadata")">
                <span>@MapMatch?.Artist - @MapMatch?.Title</span>
                <span>[@MapMatch?.DifficultyName]</span>
            </div>
            <div class="@Bem.Element("play-button")">
                <i class="fas fa-@playString"
                   @onclick="HandlePlayTrackClick" />
            </div>
            @if (isPlaying)
            {
                <audio 
                       autoplay 
                       preload="none" 
                       id="track-@this.MapMatch.GetHashCode()"
                       onplay="document.getElementById('track-@this.MapMatch.GetHashCode()').volume = 0.1;">
                    <source src="@trackPreview" type="audio/mpeg">
                </audio>
            }
            else
            {
                <audio preload="none" id="track-@this.MapMatch.GetHashCode()">
                    <source src="@trackPreview" type="audio/mpeg">
                </audio>
            }
        </Header>
        <Body>
            <div class="@Bem.Element("map-info")">
                <span>Difference</span>
                <span>@Math.Round(MapMatch.KDistance, 2)</span>
                <span>Lenght</span>
                <span>@TimeSpan.FromMinutes(MapMatch.Length.ToString("m\\:ss")</span>
                <span>BPM</span>
                <span>@MapMatch.Bpm</span>
                <span>Circles</span>
                <span>@MapMatch.TotalHitCircles</span>
                <span>Sliders</span>
                <span>@MapMatch.TotalSliders</span>
                <span>Spinners</span>
                <span>@MapMatch.TotalSpinners</span>
                <span>CS</span>
                <span>@Math.Round(MapMatch.CS, 1)</span>
                <span>HP</span>
                <span>@Math.Round(MapMatch.HP, 1)</span>
                <span>OD</span>
                <span>@Math.Round(MapMatch.OD, 1)</span>
                <span>AR</span>
                <span>@Math.Round(MapMatch.AR, 1)</span>
            </div>
        </Body>
        <Footer>
            <IconButton Text="osu!direct"
                        IconName="fa-download"
                        Style="fas"
                        RootClass="@Bem.Element("button-osu-direct")"
                        Href="@osuDirect" />
            <IconButton Text="More Info"
                        IconName="fa-external-link-alt"
                        Style="fas"
                        RootClass="@Bem.Element("button-map-info")"
                        Href="@mapURL" />
        </Footer>
    </Expander>
</div>

@code {
    private Bem Bem = new Bem("component-map-match");

    [Parameter]
    public MapMatch MapMatch { get; set; } = null;

    public bool isExpanded { get; set; } = false;
    private string expandedFlag => isExpanded ? "expanded" : null;

    private bool isPlaying = false;

    private string playString => isPlaying ? "pause" : "play";

    private string imageSource => $"https://assets.ppy.sh/beatmaps/{this.MapMatch.BeatmapSetId}/covers/list@2x.jpg";

    private string osuDirect => $"osu://b/{this.MapMatch.BeatmapId}";

    private string mapURL => $"https://osu.ppy.sh/b/{this.MapMatch.BeatmapId}";

    private string trackPreview => $"https://b.ppy.sh/preview/{this.MapMatch.BeatmapSetId}.mp3";

    private string mapLenght => TimeSpan.FromMinutes(MapMatch.Length / 10).ToString("m\\:ss");

    private void HandleExpandChange()
    {
        isExpanded = !isExpanded;
    }

    public void HandlePlayTrackClick()
    {
        isPlaying = !isPlaying;
    }
}