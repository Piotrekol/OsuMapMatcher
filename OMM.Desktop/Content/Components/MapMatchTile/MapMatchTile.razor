@using OMM.Desktop.Data.OmmApi
@using OMM.Desktop.Data.Settings
@inject ISettings Settings

<div class="@Bem.Base()">
    <Expander OnExpand="HandleExpandChange">
        <Header>
            @if (MapMatch.BeatmapSetId is not null)
            {
                <img class="@Bem.Element("preview-image", expandedFlag)"
                     src="@MapMatch.ImageLink" />
            }
            else
            {
                <div class="@Bem.Element("no-image", expandedFlag)" title="Preview not available">
                    <i class="fas fa-file-excel"></i>
                </div>
            }
            <div class="@Bem.Element("map-metadata")">
                <span>@GetArtistAndTitle()</span>
                <span>[@MapMatch?.DifficultyName]</span>
            </div>
            @if (MapMatch.BeatmapSetId is not null)
            {
                <div class="@Bem.Element("play-button")">
                    <i class="fas fa-@playString"
                       @onclick="HandlePlayTrackClick" />
                </div>
                @if (isPlaying)
                {
                    <audio autoplay
                           preload="none"
                           id="track-@this.MapMatch.GetHashCode()"
                           onplay="document.getElementById('track-@this.MapMatch.GetHashCode()').volume = @Math.Round((double)Settings.UserSettings.Volume / 100, 2);">
                        <source src="@MapMatch.TrackPreview" type="audio/mpeg">
                    </audio>
                }
                else
                {
                    <audio preload="none" id="track-@this.MapMatch.GetHashCode()">
                        <source src="@MapMatch.TrackPreview" type="audio/mpeg">
                    </audio>
                }
            }
        </Header>
        <Body>
            <div class="@Bem.Element("map-info")">
                <span>Difference</span>
                <span>@MapMatch.KDistance</span>
                <span>Length</span>
                <span>@TimeSpan.FromMinutes(MapMatch.Length).ToString("m\\:ss")</span>
                <span>BPM</span>
                <span>@MapMatch.Bpm</span>
                <span>Circles</span>
                <span>@MapMatch.TotalHitCircles</span>
                <span>Sliders</span>
                <span>@MapMatch.TotalSliders</span>
                <span>Spinners</span>
                <span>@MapMatch.TotalSpinners</span>
                <span>CS</span>
                <span>@MapMatch.CS</span>
                <span>HP</span>
                <span>@MapMatch.HP</span>
                <span>OD</span>
                <span>@MapMatch.OD</span>
                <span>AR</span>
                <span>@MapMatch.AR</span>
            </div>
        </Body>
        <Footer>
            <IconButton Text="osu!direct"
                        IconName="fa-download"
                        Style="fas"
                        RootClass="@Bem.Element("button-osu-direct")"
                        Href="@MapMatch.OsuDirectLink" />
            <IconButton Text="More Info"
                        IconName="fa-external-link-alt"
                        Style="fas"
                        RootClass="@Bem.Element("button-map-info")"
                        Href="@MapMatch.MapLink"/>
        </Footer>
    </Expander>
</div>

@code {
    private Bem Bem = new Bem("component-map-match");

    [Parameter]
    public MapMatch MapMatch { get; set; } = null;

    public bool isExpanded { get; set; } = false;

    private string expandedFlag => isExpanded ? "expanded" : null;

    private bool isPlaying = false;

    private string playString => isPlaying ? "pause" : "play";

    private void HandleExpandChange()
    {
        isExpanded = !isExpanded;
    }

    public void HandlePlayTrackClick()
    {
        isPlaying = !isPlaying;
    }

    private string GetArtistAndTitle()
    {
        if (Settings.UserSettings.PrefersUnicode)
        {
            var artistAndTitle = MapMatch.ArtistUnicode ?? MapMatch.Artist;
            artistAndTitle += " - ";
            artistAndTitle += MapMatch.TitleUnicode ?? MapMatch.Title;
            return artistAndTitle;
        }

        return MapMatch.Artist + " - " + MapMatch.Title;
    }
}